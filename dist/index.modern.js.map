{"version":3,"file":"index.modern.js","sources":["../src/react-spin-game.tsx"],"sourcesContent":["import React, {\r\n  useRef,\r\n  useState,\r\n  useLayoutEffect,\r\n  forwardRef,\r\n  useImperativeHandle\r\n} from 'react'\r\nimport { ReactComponent as Arrow } from './Images/wheel-arrow.svg'\r\nimport Styles from './styles.module.css'\r\n\r\n\r\ninterface SpinGameData {\r\n  data: Array<Array<string>>\r\n  hideButton?: boolean\r\n  result?: string\r\n  time?: number\r\n  minTime?: number\r\n  maxTime?: number\r\n  removeButtonEffect?: boolean\r\n  fontSize?: number\r\n  fontFamily?: string\r\n  horizantalText?: boolean\r\n}\r\n\r\nconst SpinAndWin = forwardRef(\r\n  (\r\n    {\r\n      data,\r\n      hideButton,\r\n      result,\r\n      time,\r\n      minTime,\r\n      maxTime,\r\n      removeButtonEffect,\r\n      fontSize,\r\n      fontFamily,\r\n      horizantalText,\r\n    }: SpinGameData,\r\n    ref\r\n  ) => {\r\n    interface stateInfo {\r\n      winnerAngle: number\r\n    }\r\n    const wheelRef = useRef<any>()\r\n    const [state] = useState<stateInfo>({ winnerAngle: 0 })\r\n    useLayoutEffect(() => {\r\n      var wheelCanvas = document.getElementById('wheel')\r\n      if (wheelCanvas && isCanvas(wheelCanvas)) {\r\n        var wheel = wheelCanvas.getContext('2d')\r\n        var wheelX = wheelCanvas.width / 2\r\n        var wheelY = wheelCanvas.height / 2\r\n        var wheelRadius = Math.min(wheelX, wheelY)\r\n\r\n        drawWheel(data, wheel, wheelX, wheelY, wheelRadius)\r\n      }\r\n    }, [data])\r\n    function isCanvas(\r\n      obj: HTMLCanvasElement | HTMLElement\r\n    ): obj is HTMLCanvasElement {\r\n      return obj.tagName === 'CANVAS'\r\n    }\r\n    const degToRad = (deg: number) => {\r\n      return (deg * Math.PI) / 180.0\r\n    }\r\n    const drawWheel = (\r\n      list: Array<Array<string>>,\r\n      wheel: any,\r\n      wheelX: number,\r\n      wheelY: number,\r\n      wheelRadius: number\r\n    ) => {\r\n      var segment = 360 / list.length\r\n\r\n      list.map((el: Array<string>, i: number) => {\r\n        wheel.save()\r\n        wheel.translate(wheelX, wheelY)\r\n        wheel.rotate(degToRad(segment * i))\r\n        wheel.translate(-wheelX, -wheelY)\r\n\r\n        wheel.fillStyle = el[1] ? el[1] : 'red'\r\n\r\n        wheel.beginPath()\r\n        wheel.moveTo(wheelX, wheelY)\r\n        wheel.arc(\r\n          wheelX,\r\n          wheelY,\r\n          wheelRadius,\r\n          0 - degToRad(90) - degToRad(segment / 2),\r\n          degToRad(segment) - degToRad(90) - degToRad(segment / 2),\r\n          false\r\n        )\r\n        wheel.moveTo(wheelX, wheelY)\r\n        wheel.fill()\r\n\r\n        wheel.fillStyle = 'white'\r\n        horizantalText ? (wheel.textAlign = 'start') : (wheel.textAlign = 'end')\r\n        wheel.font =\r\n          fontSize && fontFamily\r\n            ? `${fontSize}px ${fontFamily}`\r\n            : fontSize\r\n            ? `${fontSize}px sans-serif`\r\n            : fontFamily\r\n            ? `18px ${fontFamily}`\r\n            : '18px sans-serif'\r\n        wheel.transform = 'translate(50px, 100px)'\r\n        if (horizantalText) {\r\n          wheel.textAlign = 'center'\r\n          wheel.fillText(el[0], wheelX, wheelY / 4)\r\n        } else {\r\n          wheel.rotate(-1.57)\r\n          wheel.fillText(el[0], -20, wheelY + 10)\r\n        }\r\n\r\n        wheel.restore()\r\n      })\r\n    }\r\n    useImperativeHandle(ref, () => ({\r\n      handleSpin() {\r\n        let wheelCanvas = document.getElementById('wheel')\r\n        if (wheelCanvas) {\r\n          const freeSpinResult = result ? result : '23454'\r\n          let transitionTime = time\r\n            ? time\r\n            : minTime && maxTime && minTime > 0 && maxTime > 0\r\n            ? Math.floor(Math.random() * (maxTime - minTime + 1)) + minTime\r\n            : Math.floor(Math.random() * (4 - 3 + 1)) + 3\r\n          wheelCanvas.style.transition = transitionTime + 's'\r\n\r\n          let winner = data.find((item: Array<string>) => {\r\n            return item[0] === freeSpinResult\r\n          })\r\n          if (!winner) {\r\n            winner = ['']\r\n          }\r\n          let freeSpinGifts: Array<string> = []\r\n          data.map((item: Array<string>) => {\r\n            freeSpinGifts.push(item[0])\r\n          })\r\n          let winnerIndex = freeSpinGifts.indexOf(winner[0])\r\n          let offset = state.winnerAngle % 360\r\n          state.winnerAngle =\r\n            state.winnerAngle +\r\n            1800 -\r\n            (360 * winnerIndex) / freeSpinGifts.length -\r\n            offset\r\n          let deg = 'rotate(' + state.winnerAngle + 'deg)'\r\n          wheelCanvas.style.transform = deg\r\n        }\r\n      }\r\n    }))\r\n    const handleSpin = () => {\r\n      let wheelCanvas = document.getElementById('wheel')\r\n      if (wheelCanvas) {\r\n        const freeSpinResult = result ? result : '23454'\r\n        let transitionTime = time\r\n          ? time\r\n          : minTime && maxTime && minTime > 0 && maxTime > 0\r\n          ? Math.floor(Math.random() * (maxTime - minTime + 1)) + minTime\r\n          : Math.floor(Math.random() * (4 - 3 + 1)) + 3\r\n        wheelCanvas.style.transition = transitionTime + 's'\r\n\r\n        let winner = data.find((item: Array<string>) => {\r\n          return item[0] === freeSpinResult\r\n        })\r\n        if (!winner) {\r\n          winner = ['']\r\n        }\r\n        let freeSpinGifts: Array<string> = []\r\n        data.map((item: Array<string>) => {\r\n          freeSpinGifts.push(item[0])\r\n        })\r\n        let winnerIndex = freeSpinGifts.indexOf(winner[0])\r\n        let offset = state.winnerAngle % 360\r\n        state.winnerAngle =\r\n          state.winnerAngle +\r\n          2520 -\r\n          (360 * winnerIndex) / freeSpinGifts.length -\r\n          offset\r\n        let deg = 'rotate(' + state.winnerAngle + 'deg)'\r\n        wheelCanvas.style.transform = deg\r\n      }\r\n    }\r\n    return (\r\n      <div>\r\n        <div className={Styles['rewards-spin-game']}>\r\n          <div className={Styles['canvas-container']}>\r\n            <canvas\r\n              ref={wheelRef}\r\n              id=\"wheel\"\r\n              className={Styles['wheel']}\r\n              width='450px'\r\n              height='450px'\r\n            />\r\n            {!hideButton && (\r\n              <span\r\n                className={Styles['spin']}\r\n                onClick={() => (removeButtonEffect ? '' : handleSpin())}\r\n              >\r\n                SPIN\r\n              </span>\r\n            )}\r\n          </div>\r\n          <span className={Styles['arrow']}>\r\n            <Arrow />\r\n          </span>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n)\r\n\r\nexport default SpinAndWin\r\n"],"names":["SpinAndWin","forwardRef","ref","data","hideButton","result","time","minTime","maxTime","removeButtonEffect","fontSize","fontFamily","horizantalText","wheelRef","useRef","useState","winnerAngle","state","useLayoutEffect","wheelCanvas","document","getElementById","isCanvas","wheel","getContext","wheelX","width","wheelY","height","wheelRadius","Math","min","drawWheel","obj","tagName","degToRad","deg","PI","list","segment","length","map","el","i","save","translate","rotate","fillStyle","beginPath","moveTo","arc","fill","textAlign","font","transform","fillText","restore","useImperativeHandle","handleSpin","freeSpinResult","transitionTime","floor","random","style","transition","winner","find","item","freeSpinGifts","push","winnerIndex","indexOf","offset","React","className","Styles","id","onClick","Arrow"],"mappings":"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"}